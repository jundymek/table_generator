!function(e){var n={};function t(l){if(n[l])return n[l].exports;var i=n[l]={i:l,l:!1,exports:{}};return e[l].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=e,t.c=n,t.d=function(e,n,l){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:l})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var l=Object.create(null);if(t.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)t.d(l,i,function(n){return e[n]}.bind(null,i));return l},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/js/createHeader.js\n\n\nfunction createHeader(data) {\n  for (const key of Object.keys(data[0])) {\n    if (key !== "id") {\n      tableHead.innerHTML += `<tr>\n    <th class=\'table__head-th\'>${key.toUpperCase()}</th>\n    </tr>`;\n    }\n  }\n}\n\n// CONCATENATED MODULE: ./src/js/booleanConverts.js\nfunction booleanConverts(value) {\n  if (typeof value === "boolean") {\n    if (value === true) {\n      value = "Yes";\n    } else {\n      value = "No";\n    }\n  }\n  return value;\n}\n\n// CONCATENATED MODULE: ./src/js/createBody.js\n\n\n\nfunction createBody(data) {\n  for (let i = 0; i < data.length; i++) {\n    const dataEntries = Object.entries(data[i]);\n    console.log(dataEntries);\n    tableBody.innerHTML += `<tr id="${data[i]["id"]}" class="table__body-row table__body-row--${data[i]["id"]}"></tr>`;\n    for (let [key, value] of dataEntries) {\n      const tableBodyRow = document.querySelector(`.table__body-row--${data[i]["id"]}`);\n      if (key !== "id") {\n        value = booleanConverts(value);\n        tableBodyRow.innerHTML += `<td class="table__body-td">${value}</td>`;\n      }\n    }\n  }\n}\n\n// CONCATENATED MODULE: ./src/js/createEditForm.js\n\n\nfunction createEditForm(data) {\n  const dataEntries = Object.entries(data[0]);\n  for (let [key, value] of dataEntries) {\n    if (key !== "id") {\n      if (typeof value === "boolean") {\n        main_form.innerHTML += `<p class="form__element form__element--inactive form__element--js">\n        <label class="form__label" for="checkbox">${key}</label>\n        <input type="checkbox" name="${key}" id="${key}">\n    </p>`;\n      }\n      if (typeof value === "string") {\n        main_form.innerHTML += `<p class="form__element form__element--inactive form__element--js">\n        <label class="form__label" for="${key}">${key}</label>\n        <input required type="text" name="${key}" id="${key}" placeholder="">\n    </p>`;\n      }\n      if (typeof value === "number") {\n        main_form.innerHTML += `<p class="form__element form__element--inactive form__element--js">\n        <label class="form__label" for="${key}">${key}</label>\n        <input required type="number" name="${key}" id="${key}" step=0.5>\n    </p>`;\n      }\n    }\n  }\n  main_form.innerHTML += `<input class="form__btn-submit form__element--inactive form__element--js" id="btnsave" type="button" value="Save">`;\n}\n\n// CONCATENATED MODULE: ./src/js/modifyTableRow.js\n\n\n\nfunction modifyTableRow(data) {\n  const indexToEdit = users.findIndex(x => x.id == selectedID);\n  const tableBodyRow = document.querySelector(`.table__body-row--${users[indexToEdit]["id"]}`);\n  tableBodyRow.innerHTML = ``;\n  for (let [key, value] of data) {\n    console.log(value);\n    if (key !== "id") {\n      value = booleanConverts(value);\n      tableBodyRow.innerHTML += `<td class="table__body-td">${value}</td>`;\n    }\n  }\n  tableBodyRow.classList.add(`table__body-row--edited`)\n  setTimeout(() => {\n    tableBodyRow.classList.remove(`table__body-row--edited`)\n  }, 1000);\n}\n\n// CONCATENATED MODULE: ./src/js/handleEdit.js\n\n\n\nfunction handleEdit() {\n  let newData = { id: selectedID };\n  for (let i = 0; i < main_form.length - 1; i++) {\n    if (main_form[i].type === "checkbox") {\n      main_form[i].checked ? (newData[`${main_form[i].id}`] = true) : (newData[`${main_form[i].id}`] = false);\n    } else {\n      newData[`${main_form[i].id}`] = main_form[i].value;\n    }\n  }\n  const data = Object.entries(newData);\n  modifyTableRow(data);\n}\n\n// CONCATENATED MODULE: ./src/js/main.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "users", function() { return users; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectedID", function() { return selectedID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tableHead", function() { return tableHead; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "editForm", function() { return editForm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tableBody", function() { return tableBody; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "form", function() { return main_form; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formElements", function() { return formElements; });\n\n\n\n\n\n// service worker registration - remove if you\'re not going to use it\n\nif ("serviceWorker" in navigator) {\n  window.addEventListener("load", function() {\n    navigator.serviceWorker.register("serviceworker.js").then(\n      function(registration) {\n        // Registration was successful\n        console.log("ServiceWorker registration successful with scope: ", registration.scope);\n      },\n      function(err) {\n        // registration failed :(\n        console.log("ServiceWorker registration failed: ", err);\n      }\n    );\n  });\n}\n\n// place your code below\n\nlet users = [\n  {\n    id: 1,\n    name: "Kevin",\n    surname: "Durant",\n    age: 30,\n    retired: false\n  },\n  {\n    id: 2,\n    name: "Chris",\n    surname: "Paul",\n    age: 34,\n    retired: false\n  },\n  {\n    id: 3,\n    name: "Tracy",\n    surname: "McGrady",\n    age: 40,\n    retired: true\n  },\n  {\n    id: 4,\n    name: "Allen",\n    surname: "Iverson",\n    age: 44,\n    retired: true\n  }\n];\n\nconst main = document.querySelector(".main--js");\nconst headers = Object.keys(users[0]).splice(1);\n\nlet selectedID;\nlet tableHead;\nlet editForm;\nlet tableBody;\nlet main_form;\nlet formElements;\n\nif (users.length) {\n  main.innerHTML += `\n  \n  <div class="table-wrapper">\n    <table class="table table--js">\n        <thead class="table__head">\n          <tr class="table__head-tr table__head-tr--js">\n          </tr>\n        </thead>\n        <tbody class="table__body table__body--js"></tbody>\n      </table>\n  </div>\n    <section class="edit-form">\n    <h2 class="edit-form__header">Dynamicaly edit form data</h2>\n    <form action="#" class="form form--blurred form--js ">\n    </form>\n    </section>`;\n\n  tableHead = document.querySelector(".table__head-tr--js");\n  tableBody = document.querySelector(".table__body--js");\n  main_form = document.querySelector(".form--js");\n  \n\n  createHeader(users);\n  createBody(users);\n  createEditForm(users);\n  fillEditFormOnClick();\n\n  formElements = document.querySelectorAll(".form__element--js");\n}\n\nfunction fillEditFormOnClick() {\n  const tableRow = document.querySelectorAll(".table__body-row");\n  for (const item of tableRow) {\n    item.addEventListener("click", e => {\n      main_form.classList.remove("form--blurred");\n      for (let i = 0; i < formElements.length; i++) {\n        formElements[i].classList.remove("form__element--inactive");\n      }\n      const node = e.target.parentNode;\n      selectedID = node.id;\n      const cells = node.getElementsByTagName("td");\n      for (let i = 0; i < cells.length; i++) {\n        if (document.getElementById(headers[i]).type === "checkbox") {\n          document.getElementById(headers[i]).checked = cells[i].innerHTML === "Yes" ? true : false;\n        } else {\n          document.getElementById(headers[i]).value = cells[i].innerHTML;\n        }\n      }\n      document.getElementById("btnsave").addEventListener("click", () => handleEdit());\n    });\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')}]);